@model QuestionDetailViewModel
@{
    ViewData["Title"] = "Question Detail";
}

<h4>@ViewData["Title"]</h4>
<div class="row">
    <div class="col-md-6">
        <form method="post">
            <div asp-validation-summary="All" class="text-danger"></div>
            <div class="form-group">
                <img src="@Url.Action("GetTestImageFile", "TestQuestion", new {id = Model.ImageId})" />
            </div>
            <div class="form-group">
                <label asp-for="Category">Category:</label>
                @Html.DropDownListFor(m => m.Category, Enum.GetNames(typeof(TestCategory)).Select(c =>
                    new SelectListItem(c, c, Enum.Parse<TestCategory>(c) == @Model.Category)), 
                    "Select Category")
            </div>
            <div class="form-group">
                <label asp-for="Level">Level:</label>
                @Html.DropDownListFor(m => m.Level, Constants.Levels.Select(l =>
                    new SelectListItem(l.ToString(), l.ToString(), l == @Model.Level)), "Select Level")
                <label asp-for="AnswerChoice">Answer Type:</label>
                @Html.DropDownListFor(m => m.AnswerChoice,
                    Enum.GetNames(typeof(TestAnswerType)).Select(n => 
                        new SelectListItem(n, n, Enum.Parse<TestAnswerType>(n) == @Model.AnswerChoice)),
                    "Please select answer type")
                <label asp-for="TextAnswer">Text Answer:</label>
                <input asp-for="TextAnswer" class="form-control" />
            </div>
            <button class="btn btn-SaveQuestion" asp-action="SaveDetail" asp-route-modelId="@Model.Id"  asp-route-imageId="@Model.ImageId">Save</button>
        </form>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}
