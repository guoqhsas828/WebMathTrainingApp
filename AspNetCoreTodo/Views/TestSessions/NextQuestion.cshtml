@model WebMathTraining.Models.NextQuestionDetailViewModel

@{
    ViewData["Title"] = "Answer Question";
}

<h2>@Model.TestSessionName</h2>
<h2>@("Question: " + (Model.QuestionIdx+1) + $" (Score Point:{Model.ScorePoint}, Penalty Point:{Model.PenaltyPoint})")</h2>
<div>
    <hr />
    <div class="row">
        <div class="col-md-6">
            <form method="post">
                <div asp-validation-summary="All" class="text-danger"></div>
                @if (!Model.IsTextBased)
                {
                    <div class="form-group">
                        <img src="@Url.Action("GetTestImageFile", "TestQuestion", new { id = Model.ImageId })" />
                    </div>
                }
                @if (Model.IsTextBased)
                {
                    <div class="form-group">
                   @Html.TextAreaFor(model => model.QuestionText, new
                   {
                       //@class = "blue",
                       @disabled="true",
                       cols = "90",
                       rows = "10",
                       //@title = "Please Enter Your Name",
                       //@tabindex = "0",
                       //@accesskey="z",
                       @align = "left",
                       //@autofocus = "true",
                       @style = "color:black;background-color:orange;font-weight:bold;font-size:20px",
                       //@draggable = "true",
                       //@hidden="true",
                       //@maxlength="12",
                       //@minlength = "5",
                       //@required = "true"
                   })
                    </div>
                }
                    <div>
                        @if (!Model.IsTextBased)
                        {
                        <div class="form-group">
                            <hr />
                            <label asp-for="TextAnswer" class="control-label">Answer</label>
                            @Html.DropDownListFor(model => model.TextAnswer, Constants.AvailableChoices.Select(c => new SelectListItem(c, c)), "Select Answer")
                        </div>
                        }
                    </div>
                    <div class="form-group">
                        @if (Model.IsTextBased)
                        {
                            <hr />
                            <label asp-for="TextAnswer" class="control-label">Answer</label>
                            <input asp-for="TextAnswer" class="form-control" />
                            <span asp-validation-for="TextAnswer" class="text-danger"></span>
                        }
                    </div>
                <hr />
                <button class="btn btn-default" asp-action="SubmitAnswer" asp-route-id="@Model.SessionId" asp-route-questionIdx="@Model.QuestionIdx">Submit Answer</button>
            </form>
        </div>
    </div>
</div>
<div>
    <hr />
    <a asp-action="NextQuestion" asp-route-id="@Model.SessionId" asp-route-questionIdx="@(Model.QuestionIdx+1)">Next Question </a> |
    <a asp-action="Index">Back to Test List</a>
    @if (Model.QuestionIdx > 0)
    {
        <a asp-action="NextQuestion" asp-route-id="@Model.SessionId" asp-route-questionIdx="@(Model.QuestionIdx - 1)"> | Prev Question</a>
    }

</div>
