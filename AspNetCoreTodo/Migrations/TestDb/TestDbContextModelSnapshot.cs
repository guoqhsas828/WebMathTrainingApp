// <auto-generated />

using WebMathTraining.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using WebMathTraining.Data;

namespace WebMathTraining.Migrations.TestDb
{
    [DbContext(typeof(TestDbContext))]
    partial class TestDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebMathTraining.Models.TestImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ContentType");

                    b.Property<byte[]>("Data");

                    b.Property<int>("Height");

                    b.Property<int>("Length");

                    b.Property<string>("Name");

                    b.Property<int>("Width");

                    b.HasKey("Id");

                    b.ToTable("TestImages");
                });

            modelBuilder.Entity("WebMathTraining.Models.TestQuestion", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<byte[]>("AnswerChoices");

                    b.Property<int>("AnswerType");

                    b.Property<string>("Category");

                    b.Property<string>("FinalAnswer")
                        .IsRequired();

                    b.Property<int>("Level");

                    b.Property<Guid>("QuestionImageId");

                    b.Property<string>("Source");

                    b.HasKey("Id");

                    b.HasIndex("QuestionImageId");

                    b.ToTable("TestQuestions");
                });

            modelBuilder.Entity("WebMathTraining.Models.TestQuestion", b =>
                {
                    b.HasOne("WebMathTraining.Models.TestImage", "QuestionImage")
                        .WithMany()
                        .HasForeignKey("QuestionImageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
