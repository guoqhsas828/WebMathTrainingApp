using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace MagnoliaIG.ToolKits.Base
{
    public enum CreditCurveType
    {
        CDSCurve,
        LCDSCurve
    }

    public enum CopulaType
    {
        Gauss = 1,
        StudentT,
        DoubleT,
        Clayton,
        Frank,
        Gumbel,
        NormalInverseGaussian,
        ExternalGauss,
        RandomFactorLoading,
        Poisson,
        ExtendedGauss,
        ConditionalGauss
    }

    public enum BasketModelType
    {
        Default,
        LargePool,
        Uniform,
        SemiAnalytic,
        MonteCarlo,
        /// <summary>
        /// Probability of cancellation is proportional to conditional default probability
        /// </summary>
        LCDOProportional = 5,
        /// <summary>
        /// The events of cancellation and default are generated by common signals
        /// </summary>
        LCDOCommonSignal = 6
    }

    public struct BasketModelChoice
    {
        public BasketModelType BasketModel;
        public bool WithCorrelatedRecovery;
        public RecoveryCorrelationType QCRModel;

        public bool ExtendedCorreltion
        {
            get { return (extbit & choice_) != 0; }
            set
            {
                if (value) choice_ |= extbit;
                else
                    choice_ &= ~extbit;
            }
        }

        public int ToInt32()
        {
            return choice_;
        }

        const int extbit = 0x08;
        private int choice_;
    }

    public enum RecoveryCorrelationType
    {
        None = 0,
        ZeroOne,
        Level
    }


}
