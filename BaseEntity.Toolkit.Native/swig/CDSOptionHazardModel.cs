/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.26
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;

namespace BaseEntity.Toolkit.Models {


/// <include file='swig/CDSOptionHazardModel.xml' path='doc/members/member[@name="T:CDSOptionHazardModel"]/*' />
public static partial class CDSOptionHazardModel {
  /// <include file='swig/CDSOptionHazardModel.xml' path='doc/members/member[@name="M:CDSOptionHazardModel_Pv"]/*' />
  public static double Pv(BaseEntity.Toolkit.Base.Dt asOf, BaseEntity.Toolkit.Base.OptionStyle style, BaseEntity.Toolkit.Base.OptionType type, BaseEntity.Toolkit.Base.Dt expiry, double strike, BaseEntity.Toolkit.Base.Dt cdsFirstPayDate, BaseEntity.Toolkit.Base.Dt cdsMaturity, BaseEntity.Toolkit.Base.DayCount dayCount, BaseEntity.Toolkit.Base.Frequency cdsFreq, BaseEntity.Toolkit.Base.BDConvention roll, BaseEntity.Toolkit.Base.Calendar cal, bool accruedOnDefault, double cdsRecovery, Curves.Native.Curve dc, double kappa, double theta, double sigma, double lambda0) {
    double ret = BaseEntityPINVOKE.CDSOptionHazardModel_Pv(asOf, (int)style, (int)type, expiry, strike, cdsFirstPayDate, cdsMaturity, (int)dayCount, (int)cdsFreq, (int)roll, cal, accruedOnDefault, cdsRecovery, Curves.Native.Curve.getCPtr(dc), kappa, theta, sigma, lambda0);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/CDSOptionHazardModel.xml' path='doc/members/member[@name="M:CDSOptionHazardModel_IVol"]/*' />
  public static double IVol(BaseEntity.Toolkit.Base.Dt asOf, BaseEntity.Toolkit.Base.OptionStyle style, BaseEntity.Toolkit.Base.OptionType type, BaseEntity.Toolkit.Base.Dt expiry, double strike, BaseEntity.Toolkit.Base.Dt cdsFirstPayDate, BaseEntity.Toolkit.Base.Dt cdsMaturity, BaseEntity.Toolkit.Base.DayCount dayCount, BaseEntity.Toolkit.Base.Frequency cdsFreq, BaseEntity.Toolkit.Base.BDConvention roll, BaseEntity.Toolkit.Base.Calendar cal, bool accruedOnDefault, double cdsRecovery, Curves.Native.Curve dc, double kappa, double theta, double fv, double lambda0) {
    double ret = BaseEntityPINVOKE.CDSOptionHazardModel_IVol(asOf, (int)style, (int)type, expiry, strike, cdsFirstPayDate, cdsMaturity, (int)dayCount, (int)cdsFreq, (int)roll, cal, accruedOnDefault, cdsRecovery, Curves.Native.Curve.getCPtr(dc), kappa, theta, fv, lambda0);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
}
