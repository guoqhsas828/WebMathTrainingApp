/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.26
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.IO;
using System.Runtime.Serialization;
using System.Runtime.InteropServices;
using System.Security.Permissions;
using System.ComponentModel;

namespace BaseEntity.Toolkit.Curves {

 public partial class AdjustedSurvivalCurve : BaseEntity.Toolkit.Curves.Native.Curve {
  private HandleRef swigCPtr;

  public AdjustedSurvivalCurve(IntPtr cPtr, bool cMemoryOwn) : base(BaseEntityPINVOKE.AdjustedSurvivalCurveUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  /// <exclude />
  public static HandleRef getCPtr(AdjustedSurvivalCurve obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  /// <exclude />
  ~AdjustedSurvivalCurve() {
    Dispose();
  }

  /// <exclude />
  public override void Dispose() {
    if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
      swigCMemOwn = false;
      BaseEntityPINVOKE.delete_AdjustedSurvivalCurve(swigCPtr);
    }
    swigCPtr = new HandleRef(null, IntPtr.Zero);
    GC.SuppressFinalize(this);
    base.Dispose();
  }

  /// <include file='swig/AdjustedSurvivalCurve.xml' path='doc/members/member[@name="M:new_AdjustedSurvivalCurve"]/*' />
  public AdjustedSurvivalCurve(BaseEntity.Toolkit.Base.Dt asOf, BaseEntity.Toolkit.Base.DayCount dc, BaseEntity.Toolkit.Base.Frequency freq) : this(BaseEntityPINVOKE.new_AdjustedSurvivalCurve(asOf, (int)dc, (int)freq), true) {
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
  }

  /// <include file='swig/AdjustedSurvivalCurve.xml' path='doc/members/member[@name="M:AdjustedSurvivalCurve_RawSize"]/*' />
  public int RawSize() {
    int ret = BaseEntityPINVOKE.AdjustedSurvivalCurve_RawSize(swigCPtr);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/AdjustedSurvivalCurve.xml' path='doc/members/member[@name="M:AdjustedSurvivalCurve_Derivatives"]/*' />
  public override void Derivatives(BaseEntity.Toolkit.Base.Dt date, double[] grad, double[] hess) {
    BaseEntityPINVOKE.AdjustedSurvivalCurve_Derivatives(swigCPtr, date, grad, hess);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
  }

}
}
