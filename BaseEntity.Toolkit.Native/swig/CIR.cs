/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.26
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;

namespace BaseEntity.Toolkit.Models {


/// <include file='swig/CIR.xml' path='doc/members/member[@name="T:CIR"]/*' />
public static partial class CIR {
  /// <include file='swig/CIR.xml' path='doc/members/member[@name="M:CIR_P"]/*' />
  public static double P(double T, double x0, double kappa, double theta, double sigma) {
    double ret = BaseEntityPINVOKE.CIR_P(T, x0, kappa, theta, sigma);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/CIR.xml' path='doc/members/member[@name="M:CIR_Df"]/*' />
  public static double Df(BaseEntity.Toolkit.Base.Dt settle, BaseEntity.Toolkit.Base.Dt date, int stepSize, BaseEntity.Toolkit.Base.TimeUnit stepUnit, double x0, double kappa, Curves.Native.Curve theta, Curves.Native.Curve sigma) {
    double ret = BaseEntityPINVOKE.CIR_Df(settle, date, stepSize, (int)stepUnit, x0, kappa, Curves.Native.Curve.getCPtr(theta), Curves.Native.Curve.getCPtr(sigma));
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
}
