/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.26
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;

namespace BaseEntity.Toolkit.Models {


/// <include file='swig/BondModelFRN.xml' path='doc/members/member[@name="T:BondModelFRN"]/*' />
public static partial class BondModelFRN {
  /// <include file='swig/BondModelFRN.xml' path='doc/members/member[@name="M:BondModelFRN_DiscountMarginToFullPrice"]/*' />
  public static double DiscountMarginToFullPrice(double[] periodFractions, double[] principals, double[] amounts, double stubrate, double currentLibor, double quotedMargin, double accrualFraction, double discountMargin, double currentCoupon) {
    double ret = BaseEntityPINVOKE.BondModelFRN_DiscountMarginToFullPrice(periodFractions, principals, amounts, stubrate, currentLibor, quotedMargin, accrualFraction, discountMargin, currentCoupon);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/BondModelFRN.xml' path='doc/members/member[@name="M:BondModelFRN_FullPriceToDiscountMargin"]/*' />
  public static double FullPriceToDiscountMargin(double[] periodFractions, double[] principals, double[] amounts, double stubrate, double currentLibor, double quotedMargin, double accrualFraction, double fullPrice, double currentCoupon) {
    double ret = BaseEntityPINVOKE.BondModelFRN_FullPriceToDiscountMargin(periodFractions, principals, amounts, stubrate, currentLibor, quotedMargin, accrualFraction, fullPrice, currentCoupon);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/BondModelFRN.xml' path='doc/members/member[@name="M:BondModelFRN_Duration"]/*' />
  public static double Duration(double[] periodFractions, double[] principals, double[] amounts, double stubrate, double currentLibor, double quotedMargin, double discountMargin, double accruedFraction, double currentCoupon, double notionalFactor, double fullPrice, BaseEntity.Toolkit.Base.Frequency freq) {
    double ret = BaseEntityPINVOKE.BondModelFRN_Duration(periodFractions, principals, amounts, stubrate, currentLibor, quotedMargin, discountMargin, accruedFraction, currentCoupon, notionalFactor, fullPrice, (int)freq);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/BondModelFRN.xml' path='doc/members/member[@name="M:BondModelFRN_ModDuration__SWIG_0"]/*' />
  public static double ModDuration(double[] periodFractions, double[] principals, double[] amounts, double stubrate, double currentLibor, double quotedMargin, double discountMargin, double accruedFraction, double currentCoupon, double notionalFactor, double fullPrice, BaseEntity.Toolkit.Base.Frequency freq) {
    double ret = BaseEntityPINVOKE.BondModelFRN_ModDuration__SWIG_0(periodFractions, principals, amounts, stubrate, currentLibor, quotedMargin, discountMargin, accruedFraction, currentCoupon, notionalFactor, fullPrice, (int)freq);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/BondModelFRN.xml' path='doc/members/member[@name="M:BondModelFRN_ModDuration__SWIG_1"]/*' />
  public static double ModDuration(double duration, double yield, BaseEntity.Toolkit.Base.Frequency freq) {
    double ret = BaseEntityPINVOKE.BondModelFRN_ModDuration__SWIG_1(duration, yield, (int)freq);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/BondModelFRN.xml' path='doc/members/member[@name="M:BondModelFRN_Pv01"]/*' />
  public static double Pv01(double[] periodFractions, double[] principals, double[] amounts, double stubrate, double currentLibor, double quotedMargin, double discountMargin, double accruedFraction, double currentCoupon, double notionalFactor) {
    double ret = BaseEntityPINVOKE.BondModelFRN_Pv01(periodFractions, principals, amounts, stubrate, currentLibor, quotedMargin, discountMargin, accruedFraction, currentCoupon, notionalFactor);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/BondModelFRN.xml' path='doc/members/member[@name="M:BondModelFRN_Convexity"]/*' />
  public static double Convexity(double[] periodFractions, double[] principals, double[] amounts, double stubrate, double currentLibor, double quotedMargin, double discountMargin, double accruedFraction, double currentCoupon, double notionalFactor, double fullPrice) {
    double ret = BaseEntityPINVOKE.BondModelFRN_Convexity(periodFractions, principals, amounts, stubrate, currentLibor, quotedMargin, discountMargin, accruedFraction, currentCoupon, notionalFactor, fullPrice);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/BondModelFRN.xml' path='doc/members/member[@name="M:BondModelFRN_dPdL"]/*' />
  public static double dPdL(double[] periodFractions, double[] principals, double[] amounts, double stubrate, double currentLibor, double quotedMargin, double discountMargin, double accruedFraction, double currentCoupon, double notionalFactor) {
    double ret = BaseEntityPINVOKE.BondModelFRN_dPdL(periodFractions, principals, amounts, stubrate, currentLibor, quotedMargin, discountMargin, accruedFraction, currentCoupon, notionalFactor);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/BondModelFRN.xml' path='doc/members/member[@name="M:BondModelFRN_MarketSpreadDuration"]/*' />
  public static double MarketSpreadDuration(double[] periodFractions, double[] principals, double[] amounts, double stubrate, double currentLibor, double quotedMargin, double accrualFraction, double discountMargin, double currentCoupon, double fullPrice, BaseEntity.Toolkit.Base.Frequency freq) {
    double ret = BaseEntityPINVOKE.BondModelFRN_MarketSpreadDuration(periodFractions, principals, amounts, stubrate, currentLibor, quotedMargin, accrualFraction, discountMargin, currentCoupon, fullPrice, (int)freq);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/BondModelFRN.xml' path='doc/members/member[@name="M:BondModelFRN_MarketSpreadModDuration"]/*' />
  public static double MarketSpreadModDuration(double[] periodFractions, double[] principals, double[] amounts, double stubrate, double currentLibor, double quotedMargin, double accrualFraction, double discountMargin, double currentCoupon, double fullPrice, BaseEntity.Toolkit.Base.Frequency freq) {
    double ret = BaseEntityPINVOKE.BondModelFRN_MarketSpreadModDuration(periodFractions, principals, amounts, stubrate, currentLibor, quotedMargin, accrualFraction, discountMargin, currentCoupon, fullPrice, (int)freq);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
}
