/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.26
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;

namespace BaseEntity.Toolkit.Models {


public static partial class CevModel {
  /// <include file='swig/CevModel.xml' path='doc/members/member[@name="M:CevModel_BlackVolatility__SWIG_0"]/*' />
  public static double BlackVolatility(double zeta, double beta, double moneyness, double time) {
    double ret = BaseEntityPINVOKE.CevModel_BlackVolatility__SWIG_0(zeta, beta, moneyness, time);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/CevModel.xml' path='doc/members/member[@name="M:CevModel_BlackVolatility__SWIG_1"]/*' />
  public static double BlackVolatility(double delta, double beta, double forward, double strike, double time) {
    double ret = BaseEntityPINVOKE.CevModel_BlackVolatility__SWIG_1(delta, beta, forward, strike, time);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/CevModel.xml' path='doc/members/member[@name="M:CevModel_BlackVolatility__SWIG_2"]/*' />
  public static double BlackVolatility(double delta, double beta, double spot, double strike, double r, double q, double time) {
    double ret = BaseEntityPINVOKE.CevModel_BlackVolatility__SWIG_2(delta, beta, spot, strike, r, q, time);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/CevModel.xml' path='doc/members/member[@name="M:CevModel_EuropeanCallPrice__SWIG_0"]/*' />
  public static double EuropeanCallPrice(double delta, double beta, double forward, double strike, double time) {
    double ret = BaseEntityPINVOKE.CevModel_EuropeanCallPrice__SWIG_0(delta, beta, forward, strike, time);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/CevModel.xml' path='doc/members/member[@name="M:CevModel_EuropeanCallPrice__SWIG_1"]/*' />
  public static double EuropeanCallPrice(double delta, double beta, double spot, double strike, double r, double q, double time) {
    double ret = BaseEntityPINVOKE.CevModel_EuropeanCallPrice__SWIG_1(delta, beta, spot, strike, r, q, time);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/CevModel.xml' path='doc/members/member[@name="M:CevModel_CalibrateParameters"]/*' />
  public static void CalibrateParameters(double time, double[] moneyness, double[] volatilities, double[] lowerBounds, double[] upperBounds, ref double zeta, ref double beta) {
    BaseEntityPINVOKE.CevModel_CalibrateParameters(time, moneyness, volatilities, lowerBounds, upperBounds, ref zeta, ref beta);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
  }

}
}
