/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.26
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;

namespace BaseEntity.Toolkit.Models {


/// <include file='swig/BondModelJGB.xml' path='doc/members/member[@name="T:BondModelJGB"]/*' />
public static partial class BondModelJGB {
  /// <include file='swig/BondModelJGB.xml' path='doc/members/member[@name="M:BondModelJGB_YtmToPrice"]/*' />
  public static double YtmToPrice(double RV, double C, int Tsm, double Y) {
    double ret = BaseEntityPINVOKE.BondModelJGB_YtmToPrice(RV, C, Tsm, Y);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/BondModelJGB.xml' path='doc/members/member[@name="M:BondModelJGB_PriceToYtm"]/*' />
  public static double PriceToYtm(double RV, double C, int Tsm, double P) {
    double ret = BaseEntityPINVOKE.BondModelJGB_PriceToYtm(RV, C, Tsm, P);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/BondModelJGB.xml' path='doc/members/member[@name="M:BondModelJGB_Pv01"]/*' />
  public static double Pv01(double RV, double C, int Tsm, double Y) {
    double ret = BaseEntityPINVOKE.BondModelJGB_Pv01(RV, C, Tsm, Y);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/BondModelJGB.xml' path='doc/members/member[@name="M:BondModelJGB_dPdY"]/*' />
  public static double dPdY(double RV, double C, int Tsm, double Y) {
    double ret = BaseEntityPINVOKE.BondModelJGB_dPdY(RV, C, Tsm, Y);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/BondModelJGB.xml' path='doc/members/member[@name="M:BondModelJGB_Duration"]/*' />
  public static double Duration(double AI, double RV, double C, int Tsm, double Y, int N) {
    double ret = BaseEntityPINVOKE.BondModelJGB_Duration(AI, RV, C, Tsm, Y, N);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/BondModelJGB.xml' path='doc/members/member[@name="M:BondModelJGB_ModDuration__SWIG_0"]/*' />
  public static double ModDuration(double AI, double RV, double C, int Tsm, double Y) {
    double ret = BaseEntityPINVOKE.BondModelJGB_ModDuration__SWIG_0(AI, RV, C, Tsm, Y);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/BondModelJGB.xml' path='doc/members/member[@name="M:BondModelJGB_ModDuration__SWIG_1"]/*' />
  public static double ModDuration(double duration, double yield) {
    double ret = BaseEntityPINVOKE.BondModelJGB_ModDuration__SWIG_1(duration, yield);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/BondModelJGB.xml' path='doc/members/member[@name="M:BondModelJGB_dP2dY2"]/*' />
  public static double dP2dY2(double RV, double C, int Tsm, double Y) {
    double ret = BaseEntityPINVOKE.BondModelJGB_dP2dY2(RV, C, Tsm, Y);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/BondModelJGB.xml' path='doc/members/member[@name="M:BondModelJGB_Convexity"]/*' />
  public static double Convexity(double AI, double RV, double C, int Tsm, double Y) {
    double ret = BaseEntityPINVOKE.BondModelJGB_Convexity(AI, RV, C, Tsm, Y);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/BondModelJGB.xml' path='doc/members/member[@name="M:BondModelJGB_FwdCAYield"]/*' />
  public static double FwdCAYield(double years, double yield, double yvol, double dp2dy2, double dpdy, BaseEntity.Toolkit.Base.YieldCAMethod method) {
    double ret = BaseEntityPINVOKE.BondModelJGB_FwdCAYield(years, yield, yvol, dp2dy2, dpdy, (int)method);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/BondModelJGB.xml' path='doc/members/member[@name="M:BondModelJGB_YieldVolFromPriceVol"]/*' />
  public static double YieldVolFromPriceVol(double pvol, double price, double yield, double dv01) {
    double ret = BaseEntityPINVOKE.BondModelJGB_YieldVolFromPriceVol(pvol, price, yield, dv01);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
}
