/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.26
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;

namespace BaseEntity.Toolkit.Models {


/// <include file='swig/BarrierOption.xml' path='doc/members/member[@name="T:BarrierOption"]/*' />
public static partial class BarrierOption {
  /// <include file='swig/BarrierOption.xml' path='doc/members/member[@name="M:BarrierOption_P2__SWIG_0"]/*' />
  public static double P2(BaseEntity.Toolkit.Base.OptionStyle style, BaseEntity.Toolkit.Base.OptionType type, BaseEntity.Toolkit.Base.OptionBarrierType barrier, double T, double S, double K, double B, double R, double rfr, double d, double v) {
    double ret = BaseEntityPINVOKE.BarrierOption_P2__SWIG_0((int)style, (int)type, (int)barrier, T, S, K, B, R, rfr, d, v);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/BarrierOption.xml' path='doc/members/member[@name="M:BarrierOption_P2__SWIG_1"]/*' />
  public static double P2(BaseEntity.Toolkit.Base.OptionStyle style, BaseEntity.Toolkit.Base.OptionType type, BaseEntity.Toolkit.Base.OptionBarrierType barrier, double T, double S, double K, double B, double R, double rfr, double d, double v, ref double bafv, ref double rbfv) {
    double ret = BaseEntityPINVOKE.BarrierOption_P2__SWIG_1((int)style, (int)type, (int)barrier, T, S, K, B, R, rfr, d, v, ref bafv, ref rbfv);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/BarrierOption.xml' path='doc/members/member[@name="M:BarrierOption_P"]/*' />
  public static double P(BaseEntity.Toolkit.Base.OptionType type, BaseEntity.Toolkit.Base.OptionBarrierType barrier, double T, double S, double K, double B, double R, double rfr, double d, double v) {
    double ret = BaseEntityPINVOKE.BarrierOption_P((int)type, (int)barrier, T, S, K, B, R, rfr, d, v);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
}
