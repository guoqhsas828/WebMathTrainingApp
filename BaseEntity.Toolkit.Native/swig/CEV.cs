/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.26
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;

namespace BaseEntity.Toolkit.Models {


/// <include file='swig/CEV.xml' path='doc/members/member[@name="T:CEV"]/*' />
public static partial class CEV {
  /// <include file='swig/CEV.xml' path='doc/members/member[@name="M:CEV_P__SWIG_0"]/*' />
  public static double P(BaseEntity.Toolkit.Base.OptionStyle style, BaseEntity.Toolkit.Base.OptionType type, double T, double S, double K, double r, double d, double v, double beta) {
    double ret = BaseEntityPINVOKE.CEV_P__SWIG_0((int)style, (int)type, T, S, K, r, d, v, beta);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/CEV.xml' path='doc/members/member[@name="M:CEV_P__SWIG_1"]/*' />
  public static double P(BaseEntity.Toolkit.Base.OptionStyle style, BaseEntity.Toolkit.Base.OptionType type, double T, double S, double K, double r, double d, double v, double beta, BaseEntity.Toolkit.Base.DividendSchedule divs) {
    double ret = BaseEntityPINVOKE.CEV_P__SWIG_1((int)style, (int)type, T, S, K, r, d, v, beta, BaseEntity.Toolkit.Base.DividendSchedule.getCPtr(divs));
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/CEV.xml' path='doc/members/member[@name="M:CEV_ImpliedVolatility__SWIG_0"]/*' />
  public static double ImpliedVolatility(BaseEntity.Toolkit.Base.OptionStyle style, BaseEntity.Toolkit.Base.OptionType type, double T, double S, double K, double r, double d, double beta, double price) {
    double ret = BaseEntityPINVOKE.CEV_ImpliedVolatility__SWIG_0((int)style, (int)type, T, S, K, r, d, beta, price);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/CEV.xml' path='doc/members/member[@name="M:CEV_ImpliedVolatility__SWIG_1"]/*' />
  public static double ImpliedVolatility(BaseEntity.Toolkit.Base.OptionStyle style, BaseEntity.Toolkit.Base.OptionType type, double T, double S, double K, double r, double d, double beta, BaseEntity.Toolkit.Base.DividendSchedule divs, double price) {
    double ret = BaseEntityPINVOKE.CEV_ImpliedVolatility__SWIG_1((int)style, (int)type, T, S, K, r, d, beta, BaseEntity.Toolkit.Base.DividendSchedule.getCPtr(divs), price);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
}
