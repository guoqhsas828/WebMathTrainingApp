/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.26
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.IO;
using System.Runtime.Serialization;
using System.Runtime.InteropServices;
using System.Security.Permissions;
using System.ComponentModel;

namespace BaseEntity.Toolkit.Ccr {


/// <include file='swig/PrecalculatedExposuresNative.xml' path='doc/members/member[@name="T:PrecalculatedExposuresNative"]/*' />
[TypeConverter(typeof(ExpandableObjectConverter))]
public partial class PrecalculatedExposuresNative : IDisposable {
  private HandleRef swigCPtr;

  /// <exclude />
  protected bool swigCMemOwn;

  public PrecalculatedExposuresNative(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  /// <exclude />
  public static HandleRef getCPtr(PrecalculatedExposuresNative obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  /// <exclude />
  ~PrecalculatedExposuresNative() {
    Dispose();
  }

  /// <exclude />
  public virtual void Dispose() {
    if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
      swigCMemOwn = false;
      BaseEntityPINVOKE.delete_PrecalculatedExposuresNative(swigCPtr);
    }
    swigCPtr = new HandleRef(null, IntPtr.Zero);
    GC.SuppressFinalize(this);
  }

  /// <include file='swig/PrecalculatedExposuresNative.xml' path='doc/members/member[@name="M:new_PrecalculatedExposuresNative__SWIG_0"]/*' />
  public PrecalculatedExposuresNative(int pathCount, bool storeExpAsFloat, bool multiThreaded) : this(BaseEntityPINVOKE.new_PrecalculatedExposuresNative__SWIG_0(pathCount, storeExpAsFloat, multiThreaded), true) {
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
  }

  /// <include file='swig/PrecalculatedExposuresNative.xml' path='doc/members/member[@name="M:new_PrecalculatedExposuresNative__SWIG_1"]/*' />
  public PrecalculatedExposuresNative(int pathCount, bool storeExpAsFloat) : this(BaseEntityPINVOKE.new_PrecalculatedExposuresNative__SWIG_1(pathCount, storeExpAsFloat), true) {
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
  }

  /// <include file='swig/PrecalculatedExposuresNative.xml' path='doc/members/member[@name="M:new_PrecalculatedExposuresNative__SWIG_2"]/*' />
  public PrecalculatedExposuresNative(int pathCount) : this(BaseEntityPINVOKE.new_PrecalculatedExposuresNative__SWIG_2(pathCount), true) {
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
  }

  /// <include file='swig/PrecalculatedExposuresNative.xml' path='doc/members/member[@name="M:new_PrecalculatedExposuresNative__SWIG_3"]/*' />
  public PrecalculatedExposuresNative(PrecalculatedExposuresNative other) : this(BaseEntityPINVOKE.new_PrecalculatedExposuresNative__SWIG_3(PrecalculatedExposuresNative.getCPtr(other)), true) {
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
  }

  /// <include file='swig/PrecalculatedExposuresNative.xml' path='doc/members/member[@name="M:PrecalculatedExposuresNative_addExposures"]/*' />
  public void addExposures(IntPtr exposures, IntPtr exposureDates, int exposureCount, string nettingGroup) {
    BaseEntityPINVOKE.PrecalculatedExposuresNative_addExposures(swigCPtr, exposures, exposureDates, exposureCount, nettingGroup);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
  }

  /// <include file='swig/PrecalculatedExposuresNative.xml' path='doc/members/member[@name="M:PrecalculatedExposuresNative_getExposures"]/*' />
  public IntPtr getExposures() 
  {
    IntPtr ret = BaseEntityPINVOKE.PrecalculatedExposuresNative_getExposures(swigCPtr);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }


  /// <include file='swig/PrecalculatedExposuresNative.xml' path='doc/members/member[@name="M:PrecalculatedExposuresNative_getStoreAsFloat"]/*' />
  public bool getStoreAsFloat() {
    bool ret = BaseEntityPINVOKE.PrecalculatedExposuresNative_getStoreAsFloat(swigCPtr);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
}
