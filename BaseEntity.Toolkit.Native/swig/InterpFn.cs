/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.26
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.IO;
using System.Runtime.Serialization;
using System.Runtime.InteropServices;
using System.Security.Permissions;
using System.ComponentModel;

namespace BaseEntity.Toolkit.Numerics {


/// <include file='swig/InterpFn.xml' path='doc/members/member[@name="T:InterpFn"]/*' />
[TypeConverter(typeof(ExpandableObjectConverter))]
public partial class InterpFn : IDisposable {
  private HandleRef swigCPtr;

  /// <exclude />
  protected bool swigCMemOwn;

  public InterpFn(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  /// <exclude />
  public static HandleRef getCPtr(InterpFn obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  /// <exclude />
  ~InterpFn() {
    Dispose();
  }

  /// <exclude />
  public virtual void Dispose() {
    if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
      swigCMemOwn = false;
      BaseEntityPINVOKE.delete_InterpFn(swigCPtr);
    }
    swigCPtr = new HandleRef(null, IntPtr.Zero);
    GC.SuppressFinalize(this);
  }

  /// <include file='swig/InterpFn.xml' path='doc/members/member[@name="M:InterpFn_getX"]/*' />
  public virtual double getX(int i) {
    double ret = BaseEntityPINVOKE.InterpFn_getX(swigCPtr, i);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/InterpFn.xml' path='doc/members/member[@name="M:InterpFn_getY"]/*' />
  public virtual double getY(int i) {
    double ret = BaseEntityPINVOKE.InterpFn_getY(swigCPtr, i);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/InterpFn.xml' path='doc/members/member[@name="M:InterpFn_getSize"]/*' />
  public virtual int getSize() {
    int ret = BaseEntityPINVOKE.InterpFn_getSize(swigCPtr);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/InterpFn.xml' path='doc/members/member[@name="M:InterpFn_findIndexBefore"]/*' />
  public virtual int findIndexBefore(double x) {
    int ret = BaseEntityPINVOKE.InterpFn_findIndexBefore(swigCPtr, x);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
}
