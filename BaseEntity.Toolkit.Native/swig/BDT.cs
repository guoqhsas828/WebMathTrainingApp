/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.26
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;

namespace BaseEntity.Toolkit.Models {


/// <include file='swig/BDT.xml' path='doc/members/member[@name="T:BDT"]/*' />
public static partial class BDT {
  /// <include file='swig/BDT.xml' path='doc/members/member[@name="M:BDT_Tree__SWIG_0"]/*' />
  public static void Tree(double[] df, double[] vol, double deltaT, double[] rates) {
    BaseEntityPINVOKE.BDT_Tree__SWIG_0(df, vol, deltaT, rates);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
  }

  /// <include file='swig/BDT.xml' path='doc/members/member[@name="M:BDT_Tree__SWIG_1"]/*' />
  public static void Tree(double[] df, double[] vol, double deltaT, double[] rates, double[] sigma) {
    BaseEntityPINVOKE.BDT_Tree__SWIG_1(df, vol, deltaT, rates, sigma);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
  }

  /// <include file='swig/BDT.xml' path='doc/members/member[@name="M:BDT_Tree__SWIG_2"]/*' />
  public static void Tree(double[] df, double[] vol, double deltaT, double[] rates, bool yieldVols) {
    BaseEntityPINVOKE.BDT_Tree__SWIG_2(df, vol, deltaT, rates, yieldVols);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
  }

}
}
