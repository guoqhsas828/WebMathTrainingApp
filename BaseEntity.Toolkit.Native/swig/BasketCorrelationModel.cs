/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.26
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;

namespace BaseEntity.Toolkit.Models {


/// <include file='swig/BasketCorrelationModel.xml' path='doc/members/member[@name="T:BasketCorrelationModel"]/*' />
public static partial class BasketCorrelationModel {
  /// <include file='swig/BasketCorrelationModel.xml' path='doc/members/member[@name="M:BasketCorrelationModel_getFactorArray"]/*' />
  public static void getFactorArray(BaseEntity.Toolkit.Base.Dt dt, double[] a, BaseEntity.Toolkit.Base.Dt asOf, double[] data, int[] dates) {
    BaseEntityPINVOKE.BasketCorrelationModel_getFactorArray(dt, a, asOf, data, dates);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
  }

  /// <include file='swig/BasketCorrelationModel.xml' path='doc/members/member[@name="M:BasketCorrelationModel_fitFactors"]/*' />
  public static double fitFactors(int numFactors, int BasketSize, int nDates, double[] Data, double[] newData) {
    double ret = BaseEntityPINVOKE.BasketCorrelationModel_fitFactors(numFactors, BasketSize, nDates, Data, newData);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/BasketCorrelationModel.xml' path='doc/members/member[@name="M:BasketCorrelationModel_Cholesky"]/*' />
  public static void Cholesky(int n, double[] A) {
    BaseEntityPINVOKE.BasketCorrelationModel_Cholesky(n, A);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
  }

  /// <include file='swig/BasketCorrelationModel.xml' path='doc/members/member[@name="M:BasketCorrelationModel_toInt"]/*' />
  public static int toInt(BaseEntity.Toolkit.Base.Dt start, BaseEntity.Toolkit.Base.Dt end) {
    int ret = BaseEntityPINVOKE.BasketCorrelationModel_toInt(start, end);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
}
