/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.26
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;

namespace BaseEntity.Toolkit.Models {


/// <include file='swig/LargePoolBasketModel.xml' path='doc/members/member[@name="T:LargePoolBasketModel"]/*' />
public static partial class LargePoolBasketModel {
  /// <include file='swig/LargePoolBasketModel.xml' path='doc/members/member[@name="M:LargePoolBasketModel_Cumulative"]/*' />
  public static double Cumulative(bool wantProbability, BaseEntity.Toolkit.Base.CopulaType copulaType, int dfCommon, int dfIdiosyncratic, double[] copulaParams, double factor, int integrationPointsFirst, int integrationPointsSecond, double defaultProbability, double lowerBound, double upperBound) {
    double ret = BaseEntityPINVOKE.LargePoolBasketModel_Cumulative(wantProbability, (int)copulaType, dfCommon, dfIdiosyncratic, copulaParams, factor, integrationPointsFirst, integrationPointsSecond, defaultProbability, lowerBound, upperBound);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/LargePoolBasketModel.xml' path='doc/members/member[@name="M:LargePoolBasketModel_ComputeDistributions__SWIG_0"]/*' />
  public static double ComputeDistributions(bool wantProbability, BaseEntity.Toolkit.Base.Dt begin, BaseEntity.Toolkit.Base.Dt end, BaseEntity.Toolkit.Base.CopulaType copulaType, int dfCommon, int dfIdiosyncratic, double[] copulaParams, double[] corrData, int[] corrDates, int integrationPointsFirst, int integrationPointsSecond, Toolkit.Native.INativeCurve[] survivalCurves, double[] principals, double[] recoveryMeans, double attachment, double detachment) {
    double ret = BaseEntityPINVOKE.LargePoolBasketModel_ComputeDistributions__SWIG_0(wantProbability, begin, end, (int)copulaType, dfCommon, dfIdiosyncratic, copulaParams, corrData, corrDates, integrationPointsFirst, integrationPointsSecond, survivalCurves, principals, recoveryMeans, attachment, detachment);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/LargePoolBasketModel.xml' path='doc/members/member[@name="M:LargePoolBasketModel_ComputeDistributions__SWIG_1"]/*' />
  public static void ComputeDistributions(bool wantProbability, int startDateIndex, int stopDateIndex, BaseEntity.Toolkit.Base.CopulaType copulaType, int dfCommon, int dfIdiosyncratic, double[] copulaParams, double[] corrData, int[] corrDates, int integrationPointsFirst, int integrationPointsSecond, Toolkit.Native.INativeCurve[] survivalCurves, double[] principals, double[] recoveryMeans, Curves.Curve2D distributions) {
    BaseEntityPINVOKE.LargePoolBasketModel_ComputeDistributions__SWIG_1(wantProbability, startDateIndex, stopDateIndex, (int)copulaType, dfCommon, dfIdiosyncratic, copulaParams, corrData, corrDates, integrationPointsFirst, integrationPointsSecond, survivalCurves, principals, recoveryMeans, Curves.Curve2D.getCPtr(distributions));
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
  }

}
}
