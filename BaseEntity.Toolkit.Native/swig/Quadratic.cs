/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.26
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.IO;
using System.Runtime.Serialization;
using System.Runtime.InteropServices;
using System.Security.Permissions;
using System.ComponentModel;
using BaseEntity.Shared;

namespace BaseEntity.Toolkit.Numerics {


  /// <include file='swig/Quadratic.xml' path='doc/members/member[@name="T:Quadratic"]/*' />
  [Serializable]
  public class Quadratic : Interp, INativeSerializable {
  private HandleRef swigCPtr;

  public Quadratic(IntPtr cPtr, bool cMemoryOwn) : base(BaseEntityPINVOKE.QuadraticUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  /// <exclude />
  public static HandleRef getCPtr(Quadratic obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  /// <exclude />
  ~Quadratic() {
    Dispose();
  }

  /// <exclude />
  public override void Dispose() {
    if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
      swigCMemOwn = false;
      BaseEntityPINVOKE.delete_Quadratic(swigCPtr);
    }
    swigCPtr = new HandleRef(null, IntPtr.Zero);
    GC.SuppressFinalize(this);
    base.Dispose();
  }

      ///<exclude/>
      [SecurityPermission(SecurityAction.Demand,SerializationFormatter=true)]
      public override void GetObjectData(SerializationInfo info, StreamingContext context)
      { 
        base.GetObjectData(info, context);
        info.AddValue("b_", GetpublicData_B());
      }

      public Quadratic(IntPtr cPtr, 
                     bool cMemoryOwn, 
                     SerializationInfo info,
                     StreamingContext context) : base(BaseEntityPINVOKE.QuadraticUpcast(cPtr), cMemoryOwn, info, context)
      {
        swigCPtr = new HandleRef(this, cPtr);

        SetpublicData_B( (double[])info.GetValue("b_", typeof(double[])) );
      }

      ///<exclude/>
      protected Quadratic(SerializationInfo info, StreamingContext context) : this(BaseEntityPINVOKE.new_Quadratic__SWIG_0(), true, info, context)
      {
      }
      
  /// <include file='swig/Quadratic.xml' path='doc/members/member[@name="M:new_Quadratic__SWIG_0"]/*' />
  public Quadratic() : this(BaseEntityPINVOKE.new_Quadratic__SWIG_0(), true) {
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
  }

  /// <include file='swig/Quadratic.xml' path='doc/members/member[@name="M:new_Quadratic__SWIG_1"]/*' />
  public Quadratic(Extrap upperExtrap, Extrap lowerExtrap) : this(BaseEntityPINVOKE.new_Quadratic__SWIG_1(Extrap.getCPtr(upperExtrap), Extrap.getCPtr(lowerExtrap)), true) {
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
  }

  /// <include file='swig/Quadratic.xml' path='doc/members/member[@name="M:new_Quadratic__SWIG_2"]/*' />
  public Quadratic(Quadratic interp) : this(BaseEntityPINVOKE.new_Quadratic__SWIG_2(Quadratic.getCPtr(interp)), true) {
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
  }

  /// <include file='swig/Quadratic.xml' path='doc/members/member[@name="M:Quadratic_clone"]/*' />
  public override Interp clone() 
  {
    IntPtr cPtr = BaseEntityPINVOKE.Quadratic_clone(swigCPtr);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    if( cPtr == IntPtr.Zero ) {
      return null;
    }
    else {
      string typeName = String.Format(Interp.TypeFormatString, BaseEntityPINVOKE.Interp_typeName( new HandleRef(this, cPtr)));
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();

      Type type = Type.GetType( typeName, true );
      object o = type.Assembly.CreateInstance(type.FullName, false, 
                                              System.Reflection.BindingFlags.CreateInstance|System.Reflection.BindingFlags.NonPublic|System.Reflection.BindingFlags.Instance, 
                                              null, new object[]{cPtr, true}, null, null);

      return (Interp)o;
    }
  }


  /// <include file='swig/Quadratic.xml' path='doc/members/member[@name="M:Quadratic_GetpublicData_B"]/*' />
  public double[] GetpublicData_B() 
  {
    double[] ret = BaseEntityPINVOKE.Quadratic_GetpublicData_B(swigCPtr);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }


  /// <include file='swig/Quadratic.xml' path='doc/members/member[@name="M:Quadratic_SetpublicData_B"]/*' />
  public void SetpublicData_B(double[] array) {
    BaseEntityPINVOKE.Quadratic_SetpublicData_B(swigCPtr, array);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
  }

}
}
