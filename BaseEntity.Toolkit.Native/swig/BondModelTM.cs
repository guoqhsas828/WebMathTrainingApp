/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.26
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;

namespace BaseEntity.Toolkit.Models {


/// <include file='swig/BondModelTM.xml' path='doc/members/member[@name="T:BondModelTM"]/*' />
public static partial class BondModelTM {
  /// <include file='swig/BondModelTM.xml' path='doc/members/member[@name="M:BondModelTM_PriceToDiscountRate"]/*' />
  public static double PriceToDiscountRate(double RV, double P, int tsm, int Nd) {
    double ret = BaseEntityPINVOKE.BondModelTM_PriceToDiscountRate(RV, P, tsm, Nd);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/BondModelTM.xml' path='doc/members/member[@name="M:BondModelTM_DiscountRateToPrice"]/*' />
  public static double DiscountRateToPrice(double RV, double d, int tsm, int Nd) {
    double ret = BaseEntityPINVOKE.BondModelTM_DiscountRateToPrice(RV, d, tsm, Nd);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/BondModelTM.xml' path='doc/members/member[@name="M:BondModelTM_MoneyMarketYield"]/*' />
  public static double MoneyMarketYield(double P, double RV, int tsm, int Nd, int Ndl) {
    double ret = BaseEntityPINVOKE.BondModelTM_MoneyMarketYield(P, RV, tsm, Nd, Ndl);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/BondModelTM.xml' path='doc/members/member[@name="M:BondModelTM_MoneyMarketPrice"]/*' />
  public static double MoneyMarketPrice(double Y, double RV, int tsm, int Nd, int Ndl) {
    double ret = BaseEntityPINVOKE.BondModelTM_MoneyMarketPrice(Y, RV, tsm, Nd, Ndl);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/BondModelTM.xml' path='doc/members/member[@name="M:BondModelTM_MoneyMarketdPdY"]/*' />
  public static double MoneyMarketdPdY(double Y, int tsm, int Ndl) {
    double ret = BaseEntityPINVOKE.BondModelTM_MoneyMarketdPdY(Y, tsm, Ndl);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/BondModelTM.xml' path='doc/members/member[@name="M:BondModelTM_MoneyMarketdP2dY2"]/*' />
  public static double MoneyMarketdP2dY2(double Y, int tsm, int Ndl) {
    double ret = BaseEntityPINVOKE.BondModelTM_MoneyMarketdP2dY2(Y, tsm, Ndl);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/BondModelTM.xml' path='doc/members/member[@name="M:BondModelTM_MoneyMarketDuration"]/*' />
  public static double MoneyMarketDuration(double Y, int tsm, int Ndl) {
    double ret = BaseEntityPINVOKE.BondModelTM_MoneyMarketDuration(Y, tsm, Ndl);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/BondModelTM.xml' path='doc/members/member[@name="M:BondModelTM_MoneyMarketModifiedDuration"]/*' />
  public static double MoneyMarketModifiedDuration(double RV, double Y, int tsm, int Ndl, int Nd) {
    double ret = BaseEntityPINVOKE.BondModelTM_MoneyMarketModifiedDuration(RV, Y, tsm, Ndl, Nd);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/BondModelTM.xml' path='doc/members/member[@name="M:BondModelTM_MoneyMarketConvexity"]/*' />
  public static double MoneyMarketConvexity(double RV, double Y, int tsm, int Ndl, int Nd) {
    double ret = BaseEntityPINVOKE.BondModelTM_MoneyMarketConvexity(RV, Y, tsm, Ndl, Nd);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/BondModelTM.xml' path='doc/members/member[@name="M:BondModelTM_MoneyMarketPv01"]/*' />
  public static double MoneyMarketPv01(double Y, int tsm, int Ndl) {
    double ret = BaseEntityPINVOKE.BondModelTM_MoneyMarketPv01(Y, tsm, Ndl);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/BondModelTM.xml' path='doc/members/member[@name="M:BondModelTM_YtmToPrice"]/*' />
  public static double YtmToPrice(double Y, double RV, int tsm, int Ndl) {
    double ret = BaseEntityPINVOKE.BondModelTM_YtmToPrice(Y, RV, tsm, Ndl);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/BondModelTM.xml' path='doc/members/member[@name="M:BondModelTM_PriceToYtm"]/*' />
  public static double PriceToYtm(double P, double RV, int tsm, int Ndl) {
    double ret = BaseEntityPINVOKE.BondModelTM_PriceToYtm(P, RV, tsm, Ndl);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/BondModelTM.xml' path='doc/members/member[@name="M:BondModelTM_dPdY"]/*' />
  public static double dPdY(double Y, double RV, int tsm, int Ndl) {
    double ret = BaseEntityPINVOKE.BondModelTM_dPdY(Y, RV, tsm, Ndl);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/BondModelTM.xml' path='doc/members/member[@name="M:BondModelTM_dP2dY2"]/*' />
  public static double dP2dY2(double Y, double RV, int tsm, int Ndl) {
    double ret = BaseEntityPINVOKE.BondModelTM_dP2dY2(Y, RV, tsm, Ndl);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/BondModelTM.xml' path='doc/members/member[@name="M:BondModelTM_Duration"]/*' />
  public static double Duration(double Y, int tsm, int Ndl) {
    double ret = BaseEntityPINVOKE.BondModelTM_Duration(Y, tsm, Ndl);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/BondModelTM.xml' path='doc/members/member[@name="M:BondModelTM_ModifiedDuration"]/*' />
  public static double ModifiedDuration(double RV, double Y, int tsm, int Ndl) {
    double ret = BaseEntityPINVOKE.BondModelTM_ModifiedDuration(RV, Y, tsm, Ndl);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/BondModelTM.xml' path='doc/members/member[@name="M:BondModelTM_Pv01"]/*' />
  public static double Pv01(double Y, double RV, int tsm, int Ndl) {
    double ret = BaseEntityPINVOKE.BondModelTM_Pv01(Y, RV, tsm, Ndl);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/BondModelTM.xml' path='doc/members/member[@name="M:BondModelTM_Convexity"]/*' />
  public static double Convexity(double Y, double RV, int tsm, int Ndl) {
    double ret = BaseEntityPINVOKE.BondModelTM_Convexity(Y, RV, tsm, Ndl);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/BondModelTM.xml' path='doc/members/member[@name="M:BondModelTM_YtmToPriceLeapYear"]/*' />
  public static double YtmToPriceLeapYear(double Y) {
    double ret = BaseEntityPINVOKE.BondModelTM_YtmToPriceLeapYear(Y);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  /// <include file='swig/BondModelTM.xml' path='doc/members/member[@name="M:BondModelTM_PriceToYtmLeapYear"]/*' />
  public static double PriceToYtmLeapYear(double P) {
    double ret = BaseEntityPINVOKE.BondModelTM_PriceToYtmLeapYear(P);
    if (BaseEntityPINVOKE.SWIGPendingException.Pending) throw BaseEntityPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
}
